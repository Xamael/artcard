package org.maox.artcard.gwent;

import java.util.ArrayList;
import java.util.List;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Scan Gwent Cards
 * @author Alex
 *
 */
public class GwentScan {

	private static final Logger logger = LoggerFactory.getLogger(GwentScan.class);

	private static final String URL_STARTER_SET = "https://gwent.pro/list/?search=Starter%20Set";

	private static final int STARTER = 0;

	private String URL;
	private List<Card> listCards = new ArrayList<Card>();

	/**
	 * Constructor
	 * 
	 * @param expansion
	 */
	public GwentScan(int expansion) {
		setURL(URL_STARTER_SET);
	}

	/**
	 * URL to read
	 * 
	 * @param urlStarterSet
	 */
	public void setURL(String URL) {
		this.URL = URL;
	}

	/**
	 * Launcher
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Parametros expansion, ruta destino
		try {
			// Init
			GwentScan scan = new GwentScan(STARTER);

			// Read page
			scan.readPage();
		} catch (Exception e) {
			handleException(e);
		}
	}

	/*
	 * Read webpage from gwent.pro and extract image URLs
	 */
	private void readPage() throws Exception {
		logger.info("Start reading page: {}", URL);

		// Get page
		Document doc = Jsoup.connect(URL).get();
		logger.info("Read page: {}", doc.title());
		
		// Extract info <table>
		Elements tables = doc.body().getElementsByTag("table");
		// Cards are in second table <tbody><tr>
		Elements cards = tables.get(1).child(0).children();
		
		// From TableRow extract Card info
		for (Element card : cards)
		{
			listCards.add(extractCard(card));
		}
		
		logger.info("End reading page");
	}

	/**
	 * 
	 * @param card
	 * @return
	 */
	private Card extractCard(Element card) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * Handle Exception
	 *
	 * @param e exception
	 */
	public static void handleException(Exception e) {
		logger.error(e.toString());

		StackTraceElement[] arrayOfStackTraceElement = e.getStackTrace();
		for (StackTraceElement element : arrayOfStackTraceElement) {
			logger.error("\tat {}", element);
		}
	}

}
